1、首先cd  对应的文件目录

2、 做一个配置文件  语法npm init

3、配置babel   npm install babel-preset-es2015  -save

4、webpack 热加载配置   让jsx转为js


Babel 转码器
JavaScript 引擎（包括浏览器和 Node）都不认识 JSX，需要首先使用 Babel 转码，然后才能运行。

<script src="react.js"></script>
<script src="react-dom.js"></script>
<script src="babel.min.js"></script>
<script type="text/babel">
  // ** Our code goes here! **
</script>
React 需要加载两个库：React 和 React-DOM，前者是 React 的核心库，后者是 React 的 DOM 适配库。

Babel 用来在浏览器转换 JSX 语法，如果服务器已经转好了，浏览器就不需要加载这个库。



用英文命名

安装命令  npm install -g webpack
npm install -g webpack-dev-server


出现问题1、Error: Couldn't find preset "es2015" relative to directory

Try this

npm install babel-preset-es2015

npm install babel-preset-react

npm install babel --save-dev

This worked for me.

5、需要实时同步编程和网页刷新用这个命令  webpack-dev-server --contentbase  -src --inline   开两个显示器可以事实观察。




6、语法学习


a、组件return 函数返回Html的节点必须是一个。

b、可以给外部使用的组件定义 export deafault class ComponentHeader extends ReactComponent

c、入口的定义：  ReactDom.render(<Index/>,doucument.getElenmentById(''))


组件嵌套：



jsx内置表达式：

三元表达式的使用：{window.userName == '' ? '默认用户' : '用户名：' + userName}
var 
<input type ="button"  value = "默认按钮" disabled={false}/>

绑定  用 {}；



生命周期：






State  属性   对于模块属于自身 属性

 初始化： this.state={username:""}
 初始化可以放置在构造函数中  constructor 里

 修改state  this.setState({username:""})




 

props  属性：  对于模块   属于外来的属性

传递参数  <BodyIndex  username="Parrry"/>
在模块中接受参数   this.props.username

this.props.useId


事件与数据的双向绑定：


如何从父组件向子组件传递

如何从子组件向父组件传递






可复用组件